// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class FeeUpdated extends ethereum.Event {
  get params(): FeeUpdated__Params {
    return new FeeUpdated__Params(this);
  }
}

export class FeeUpdated__Params {
  _event: FeeUpdated;

  constructor(event: FeeUpdated) {
    this._event = event;
  }

  get feeType(): string {
    return this._event.parameters[0].value.toString();
  }

  get newFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PlayFeePaid extends ethereum.Event {
  get params(): PlayFeePaid__Params {
    return new PlayFeePaid__Params(this);
  }
}

export class PlayFeePaid__Params {
  _event: PlayFeePaid;

  constructor(event: PlayFeePaid) {
    this._event = event;
  }

  get quizId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get player(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class QuizCreated extends ethereum.Event {
  get params(): QuizCreated__Params {
    return new QuizCreated__Params(this);
  }
}

export class QuizCreated__Params {
  _event: QuizCreated;

  constructor(event: QuizCreated) {
    this._event = event;
  }

  get quizId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class ScoreUpdated extends ethereum.Event {
  get params(): ScoreUpdated__Params {
    return new ScoreUpdated__Params(this);
  }
}

export class ScoreUpdated__Params {
  _event: ScoreUpdated;

  constructor(event: ScoreUpdated) {
    this._event = event;
  }

  get quizId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get player(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newScore(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Withdrawn extends ethereum.Event {
  get params(): Withdrawn__Params {
    return new Withdrawn__Params(this);
  }
}

export class Withdrawn__Params {
  _event: Withdrawn;

  constructor(event: Withdrawn) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FunQuiz__getLeaderboardDataResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getAddresses(): Array<Address> {
    return this.value0;
  }

  getScores(): Array<BigInt> {
    return this.value1;
  }
}

export class FunQuiz__getQuestionsByQuizIdResultValue0Struct extends ethereum.Tuple {
  get questionText(): string {
    return this[0].toString();
  }

  get options(): Array<string> {
    return this[1].toStringArray();
  }

  get correctAnswerIndex(): i32 {
    return this[2].toI32();
  }

  get timeLimit(): BigInt {
    return this[3].toBigInt();
  }

  get points(): BigInt {
    return this[4].toBigInt();
  }
}

export class FunQuiz__getQuizByIdResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get title(): string {
    return this[1].toString();
  }

  get description(): string {
    return this[2].toString();
  }

  get creator(): Address {
    return this[3].toAddress();
  }

  get questions(): Array<FunQuiz__getQuizByIdResultValue0QuestionsStruct> {
    return this[4].toTupleArray<FunQuiz__getQuizByIdResultValue0QuestionsStruct>();
  }
}

export class FunQuiz__getQuizByIdResultValue0QuestionsStruct extends ethereum.Tuple {
  get questionText(): string {
    return this[0].toString();
  }

  get options(): Array<string> {
    return this[1].toStringArray();
  }

  get correctAnswerIndex(): i32 {
    return this[2].toI32();
  }

  get timeLimit(): BigInt {
    return this[3].toBigInt();
  }

  get points(): BigInt {
    return this[4].toBigInt();
  }
}

export class FunQuiz__quizzesResult {
  value0: BigInt;
  value1: string;
  value2: string;
  value3: Address;

  constructor(value0: BigInt, value1: string, value2: string, value3: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getTitle(): string {
    return this.value1;
  }

  getDescription(): string {
    return this.value2;
  }

  getCreator(): Address {
    return this.value3;
  }
}

export class FunQuiz extends ethereum.SmartContract {
  static bind(address: Address): FunQuiz {
    return new FunQuiz("FunQuiz", address);
  }

  createQuizFee(): BigInt {
    let result = super.call("createQuizFee", "createQuizFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_createQuizFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createQuizFee",
      "createQuizFee():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getContractBalance(): BigInt {
    let result = super.call(
      "getContractBalance",
      "getContractBalance():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getContractBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getContractBalance",
      "getContractBalance():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLeaderboardData(_quizId: BigInt): FunQuiz__getLeaderboardDataResult {
    let result = super.call(
      "getLeaderboardData",
      "getLeaderboardData(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_quizId)],
    );

    return new FunQuiz__getLeaderboardDataResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
    );
  }

  try_getLeaderboardData(
    _quizId: BigInt,
  ): ethereum.CallResult<FunQuiz__getLeaderboardDataResult> {
    let result = super.tryCall(
      "getLeaderboardData",
      "getLeaderboardData(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_quizId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FunQuiz__getLeaderboardDataResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
      ),
    );
  }

  getPlayerScore(_quizId: BigInt, _player: Address): BigInt {
    let result = super.call(
      "getPlayerScore",
      "getPlayerScore(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_quizId),
        ethereum.Value.fromAddress(_player),
      ],
    );

    return result[0].toBigInt();
  }

  try_getPlayerScore(
    _quizId: BigInt,
    _player: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPlayerScore",
      "getPlayerScore(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_quizId),
        ethereum.Value.fromAddress(_player),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getQuestionsByQuizId(
    _quizId: BigInt,
  ): Array<FunQuiz__getQuestionsByQuizIdResultValue0Struct> {
    let result = super.call(
      "getQuestionsByQuizId",
      "getQuestionsByQuizId(uint256):((string,string[4],uint8,uint32,uint32)[10])",
      [ethereum.Value.fromUnsignedBigInt(_quizId)],
    );

    return result[0].toTupleArray<FunQuiz__getQuestionsByQuizIdResultValue0Struct>();
  }

  try_getQuestionsByQuizId(
    _quizId: BigInt,
  ): ethereum.CallResult<
    Array<FunQuiz__getQuestionsByQuizIdResultValue0Struct>
  > {
    let result = super.tryCall(
      "getQuestionsByQuizId",
      "getQuestionsByQuizId(uint256):((string,string[4],uint8,uint32,uint32)[10])",
      [ethereum.Value.fromUnsignedBigInt(_quizId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<FunQuiz__getQuestionsByQuizIdResultValue0Struct>(),
    );
  }

  getQuizById(_quizId: BigInt): FunQuiz__getQuizByIdResultValue0Struct {
    let result = super.call(
      "getQuizById",
      "getQuizById(uint256):((uint256,string,string,address,(string,string[4],uint8,uint32,uint32)[10]))",
      [ethereum.Value.fromUnsignedBigInt(_quizId)],
    );

    return changetype<FunQuiz__getQuizByIdResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getQuizById(
    _quizId: BigInt,
  ): ethereum.CallResult<FunQuiz__getQuizByIdResultValue0Struct> {
    let result = super.tryCall(
      "getQuizById",
      "getQuizById(uint256):((uint256,string,string,address,(string,string[4],uint8,uint32,uint32)[10]))",
      [ethereum.Value.fromUnsignedBigInt(_quizId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<FunQuiz__getQuizByIdResultValue0Struct>(value[0].toTuple()),
    );
  }

  hasPaidToPlay(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "hasPaidToPlay",
      "hasPaidToPlay(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_hasPaidToPlay(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasPaidToPlay",
      "hasPaidToPlay(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  playQuizFee(): BigInt {
    let result = super.call("playQuizFee", "playQuizFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_playQuizFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("playQuizFee", "playQuizFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  playerScores(param0: BigInt, param1: Address): BigInt {
    let result = super.call(
      "playerScores",
      "playerScores(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_playerScores(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "playerScores",
      "playerScores(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quizCounter(): BigInt {
    let result = super.call("quizCounter", "quizCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_quizCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("quizCounter", "quizCounter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quizParticipants(param0: BigInt, param1: BigInt): Address {
    let result = super.call(
      "quizParticipants",
      "quizParticipants(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toAddress();
  }

  try_quizParticipants(
    param0: BigInt,
    param1: BigInt,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "quizParticipants",
      "quizParticipants(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  quizzes(param0: BigInt): FunQuiz__quizzesResult {
    let result = super.call(
      "quizzes",
      "quizzes(uint256):(uint256,string,string,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new FunQuiz__quizzesResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString(),
      result[3].toAddress(),
    );
  }

  try_quizzes(param0: BigInt): ethereum.CallResult<FunQuiz__quizzesResult> {
    let result = super.tryCall(
      "quizzes",
      "quizzes(uint256):(uint256,string,string,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FunQuiz__quizzesResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString(),
        value[3].toAddress(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateQuizCall extends ethereum.Call {
  get inputs(): CreateQuizCall__Inputs {
    return new CreateQuizCall__Inputs(this);
  }

  get outputs(): CreateQuizCall__Outputs {
    return new CreateQuizCall__Outputs(this);
  }
}

export class CreateQuizCall__Inputs {
  _call: CreateQuizCall;

  constructor(call: CreateQuizCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _questions(): Array<CreateQuizCall_questionsStruct> {
    return this._call.inputValues[2].value.toTupleArray<CreateQuizCall_questionsStruct>();
  }
}

export class CreateQuizCall__Outputs {
  _call: CreateQuizCall;

  constructor(call: CreateQuizCall) {
    this._call = call;
  }
}

export class CreateQuizCall_questionsStruct extends ethereum.Tuple {
  get questionText(): string {
    return this[0].toString();
  }

  get options(): Array<string> {
    return this[1].toStringArray();
  }

  get correctAnswerIndex(): i32 {
    return this[2].toI32();
  }

  get timeLimit(): BigInt {
    return this[3].toBigInt();
  }

  get points(): BigInt {
    return this[4].toBigInt();
  }
}

export class PayToPlayCall extends ethereum.Call {
  get inputs(): PayToPlayCall__Inputs {
    return new PayToPlayCall__Inputs(this);
  }

  get outputs(): PayToPlayCall__Outputs {
    return new PayToPlayCall__Outputs(this);
  }
}

export class PayToPlayCall__Inputs {
  _call: PayToPlayCall;

  constructor(call: PayToPlayCall) {
    this._call = call;
  }

  get _quizId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PayToPlayCall__Outputs {
  _call: PayToPlayCall;

  constructor(call: PayToPlayCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetCreateQuizFeeCall extends ethereum.Call {
  get inputs(): SetCreateQuizFeeCall__Inputs {
    return new SetCreateQuizFeeCall__Inputs(this);
  }

  get outputs(): SetCreateQuizFeeCall__Outputs {
    return new SetCreateQuizFeeCall__Outputs(this);
  }
}

export class SetCreateQuizFeeCall__Inputs {
  _call: SetCreateQuizFeeCall;

  constructor(call: SetCreateQuizFeeCall) {
    this._call = call;
  }

  get _newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCreateQuizFeeCall__Outputs {
  _call: SetCreateQuizFeeCall;

  constructor(call: SetCreateQuizFeeCall) {
    this._call = call;
  }
}

export class SetPlayQuizFeeCall extends ethereum.Call {
  get inputs(): SetPlayQuizFeeCall__Inputs {
    return new SetPlayQuizFeeCall__Inputs(this);
  }

  get outputs(): SetPlayQuizFeeCall__Outputs {
    return new SetPlayQuizFeeCall__Outputs(this);
  }
}

export class SetPlayQuizFeeCall__Inputs {
  _call: SetPlayQuizFeeCall;

  constructor(call: SetPlayQuizFeeCall) {
    this._call = call;
  }

  get _newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPlayQuizFeeCall__Outputs {
  _call: SetPlayQuizFeeCall;

  constructor(call: SetPlayQuizFeeCall) {
    this._call = call;
  }
}

export class SubmitAnswersCall extends ethereum.Call {
  get inputs(): SubmitAnswersCall__Inputs {
    return new SubmitAnswersCall__Inputs(this);
  }

  get outputs(): SubmitAnswersCall__Outputs {
    return new SubmitAnswersCall__Outputs(this);
  }
}

export class SubmitAnswersCall__Inputs {
  _call: SubmitAnswersCall;

  constructor(call: SubmitAnswersCall) {
    this._call = call;
  }

  get _quizId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _userAnswers(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }

  get _timeLeftValues(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SubmitAnswersCall__Outputs {
  _call: SubmitAnswersCall;

  constructor(call: SubmitAnswersCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
